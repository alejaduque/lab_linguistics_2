beta_prime <- coef(fit)
bet
beta
alpha
alpha
beta_prime
#Frequencies-rank law
model_freq <- lm(log_freq ~ log_ranks)
# Theil_sen_regression
plot(log_freq ~ log_ranks)
abline(model_freq,col='blue')
alpha <- coef(model_freq)
#Number-frequencies law
model_rank <- lm(log_ranks ~ log_freq)
# Theil_sen_regression
plot(log_ranks ~ log_freq)
abline(model_rank,col='blue')
beta <- coef(model_rank)
# Forward cumulative and retrieve beta_prime
log_forward_cumulative <- -beta * log_freq
model_fc <- lm(log_forward_cumulative ~ log_freq)
# Theil_sen_regression
plot(log_forward_cumulative ~ log_freq)
abline(model_fc),col='blue')
model_freq <- lm(log_freq ~ log_ranks)
# Theil_sen_regression
plot(log_freq ~ log_ranks)
abline(model_freq,col='blue')
alpha <- coef(model_freq)
# Function to perform multiplicative binning
multiplicative_binning <- function(freq, num_bins) {
# Calculate the minimum and maximum frequency
min_freq <- min(freq)
max_freq <- max(freq)
# Calculate the bin widths
bin_widths <- exp(seq(log(min_freq), log(max_freq), length.out = num_bins + 1))
# Bin the frequencies
bins <- cut(freq, breaks = bin_widths, include.lowest = TRUE)
return(bins)
}
num_bins <- ceiling(sqrt(length(freq)))
bins <- multiplicative_binning(freq, num_bins)
# Plot histogram with multiplicative binning
hist(freq, breaks = exp(c(min(log(freq)), log(max(freq)))),
main = "Multiplicative Binning",
xlab = "Frequency",
ylab = "Frequency Count")
# Add vertical lines for bin edges
for (i in 1:length(bins)) {
abline(v = exp(attr(bins, "breaks")[i]), col = "red", lty = 2)
}
library(corrr)
library(ggplot2)
library(ggrepel)
library(tidyverse)
library(mblm)
library(MASS)
# library(RobustLinearReg)
#List with files
list_datasets <- list.files(path = "data", pattern = ".csv", full.names = TRUE)
#Read dataset
"for (i in 1:length(list_datasets)) {
data <- read.csv(list_datasets[i])
data <- data[order(-data$frequency, -data$length),]
fr <- data$frequency}"
data <- read.csv(list_datasets[1])
#Getting frequencies and ranks
freq_l<- data$Frequency
freq <- c(freq_l)
ranks <- seq_along(x)
log_ranks <- log(ranks)
log_freq <- log(freq)
#Frequencies-rank law
model_freq <- mblm(log_freq ~ log_ranks)
# Theil_sen_regression
plot(log_freq ~ log_ranks)
abline(model_freq,col='blue')
alpha <- coef(model_freq)
#Number-frequencies law
model_rank <- mblm(log_ranks ~ log_freq)
# Theil_sen_regression
plot(log_ranks ~ log_freq)
abline(model_rank,col='blue')
beta <- coef(model_rank)
# Forward cumulative and retrieve beta_prime
log_forward_cumulative <- -beta * log_freq
model_fc <- mblm(log_forward_cumulative ~ log_freq)
# Theil_sen_regression
plot(log_forward_cumulative ~ log_freq)
abline(model_fc, col='blue')
beta_prime <- coef(model_fc)
library(corrr)
library(ggplot2)
library(ggrepel)
library(tidyverse)
library(mblm)
library(MASS)
list_datasets <- list.files(path = "data", pattern = ".csv", full.names = TRUE)
for (i in 1:length(list_datasets)) {
data <- read.csv(list_datasets[i])
data <- data[order(-data$frequency, -data$length),]
fr <- data$frequency
}
beta
beta[2]
library(corrr)
library(ggplot2)
library(ggrepel)
library(tidyverse)
library(mblm)
library(MASS)
# library(RobustLinearReg)
#List with files
list_datasets <- list.files(path = "data", pattern = ".csv", full.names = TRUE)
#Read dataset
"for (i in 1:length(list_datasets)) {
data <- read.csv(list_datasets[i])
data <- data[order(-data$frequency, -data$length),]
fr <- data$frequency}"
data <- read.csv(list_datasets[1])
#Getting frequencies and ranks
freq_l<- data$Frequency
freq <- c(freq_l)
ranks <- seq_along(x)
log_ranks <- log(ranks)
log_freq <- log(freq)
#Frequencies-rank law
model_freq <- mblm(log_freq ~ log_ranks)
# Theil_sen_regression
plot(log_freq ~ log_ranks)
abline(model_freq,col='blue')
alpha <- coef(model_freq)[2]
#Number-frequencies law
model_rank <- mblm(log_ranks ~ log_freq)
# Theil_sen_regression
plot(log_ranks ~ log_freq)
abline(model_rank,col='blue')
beta <- coef(model_rank)[2]
# Forward cumulative and retrieve beta_prime
log_forward_cumulative <- -beta * log_freq
model_fc <- mblm(log_forward_cumulative ~ log_freq)
# Theil_sen_regression
plot(log_forward_cumulative ~ log_freq)
abline(model_fc, col='blue')
beta_prime <- coef(model_fc)[2]
model_rank <- mblm(log_ranks ~ log_freq)
# Theil_sen_regression
plot(log_ranks ~ log_freq)
abline(model_rank,col='blue')
beta <- coef(model_rank)[2]
model_freq <- mblm(log_freq ~ log_ranks)
# Theil_sen_regression
plot(log_freq ~ log_ranks)
abline(model_freq,col='blue')
alpha <- coef(model_freq)[2]
data <- read.csv(list_datasets[3])
#Getting frequencies and ranks
freq_l<- data$Frequency
freq <- c(freq_l)
ranks <- seq_along(x)
log_ranks <- log(ranks)
log_freq <- log(freq)
#Frequencies-rank law
model_freq <- mblm(log_freq ~ log_ranks)
freq_l<- data$Frequency
freq <- c(freq_l)
ranks <- seq_along(x)
log_ranks <- log(ranks)
log_freq <- log(freq)
#Frequencies-rank law
model_freq <- mblm(log_freq ~ log_ranks)
library(corrr)
library(ggplot2)
library(ggrepel)
library(tidyverse)
library(mblm)
library(MASS)
#List with files
list_datasets <- list.files(path = "data", pattern = ".csv", full.names = TRUE)
#Read dataset
"for (i in 1:length(list_datasets)) {
data <- read.csv(list_datasets[i])
data <- data[order(-data$frequency, -data$length),]
fr <- data$frequency}"
data <- read.csv(list_datasets[3])
#Getting frequencies and ranks
freq_l<- data$Frequency
freq <- c(freq_l)
ranks <- seq_along(x)
freq <- c(freq_l)
ranks <- seq_along(freq)
log_ranks <- log(ranks)
log_freq <- log(freq)
#Frequencies-rank law
model_freq <- mblm(log_freq ~ log_ranks)
# Theil_sen_regression
plot(log_freq ~ log_ranks)
abline(model_freq,col='blue')
alpha <- coef(model_freq)[2]
#Number-frequencies law
model_rank <- mblm(log_ranks ~ log_freq)
# Theil_sen_regression
plot(log_ranks ~ log_freq)
abline(model_rank,col='blue')
beta <- coef(model_rank)[2]
# Forward cumulative and retrieve beta_prime
log_forward_cumulative <- -beta * log_freq
model_fc <- mblm(log_forward_cumulative ~ log_freq)
# Theil_sen_regression
plot(log_forward_cumulative ~ log_freq)
abline(model_fc, col='blue')
beta_prime <- coef(model_fc)[2]
alpha <- coef(model_freq)
alpha
freq
freq == 1
sum(freq == 1)
freq==403
sum(freq == 43)
sum(freq == 403)
log_freq_unique <- log(unique(freq))
forward_cumulative <- function(freq_x){
result <- c()
freq_unique <- unique(freq_x)
for (i in 1:length(freq_unique)){
result <- c(result, sum(freq_x == freq_unique[i]))
}
return(result)
}
log_fwd_cum <- log(forward_cumulative(freq))
model_fc <- mblm(log_fwd_cum ~ log_freq)
log_freq_unique <- log(unique(freq))
forward_cumulative <- function(freq_x){
result <- c()
freq_unique <- unique(freq_x)
for (i in 1:length(freq_unique)){
result <- c(result, sum(freq_x == freq_unique[i]))
}
return(result)
}
log_fwd_cum <- log(forward_cumulative(freq))
model_fc <- mblm(log_fwd_cum ~ log_freq)
log_freq_unique <- log(unique(freq))
forward_cumulative <- function(freq_x){
result <- c()
freq_unique <- unique(freq_x)
for (i in 1:length(freq_unique)){
result <- c(result, sum(freq_x == freq_unique[i]))
}
return(result)
}
log_fwd_cum <- log(forward_cumulative(freq))
model_fc <- mblm(log_fwd_cum ~ log_freq_unique)
# Theil_sen_regression
plot(log_fwd_cum ~ log_freq_unique)
abline(model_fc, col='blue')
beta_prime <- coef(model_fc)[2]
beta_prime
log_freq_unique <- log(unique(freq))
forward_cumulative <- function(freq_x){
result <- c()
freq_unique <- unique(freq_x)
for (i in 1:length(freq_unique)){
result <- c(result, sum(freq_x >= freq_unique[i]))
}
return(result)
}
log_fwd_cum <- log(forward_cumulative(freq))
model_fc <- mblm(log_fwd_cum ~ log_freq_unique)
# Theil_sen_regression
plot(log_fwd_cum ~ log_freq_unique)
abline(model_fc, col='blue')
beta_prime <- coef(model_fc)[2]
beta_prime
library(corrr)
library(ggplot2)
library(ggrepel)
library(tidyverse)
library(mblm)
library(MASS)
library(corrr)
library(ggplot2)
library(ggrepel)
library(tidyverse)
library(mblm)
library(MASS)
#List with files
list_datasets <- list.files(path = "data", pattern = ".csv", full.names = TRUE)
#List with files
list_datasets <- list.files(path = "data", pattern = ".csv", full.names = TRUE)
for (i in 1:length(list_datasets)) {
data <- read.csv(list_datasets[i])
data <- data[order(-data$frequency, -data$length),]
fr <- data$frequency}
for (i in:length(list_datasets)) {
for (i in length(list_datasets)) {
data <- read.csv(list_datasets[i])
data <- data[order(-data$frequency, -data$length),]
fr <- data$frequency}
#Sets lists with items
alpha_list <- c()
beta_list <- c()
beta_prime_list <- c()
for (df in list_datasets){
data <- read.csv(df)
freq_l <- data$Frequency
freq <- c(freq_l) #frequencies
ranks <- seq_len(freq) #ranks
log_ranks <- log(ranks)
log_freq <- log(freq)
#Frequencies-rank law
model_freq <- lm(log_freq ~ log_ranks)
alpha <- coef(model_freq)[2]
#Number-frequencies law
model_rank <- mblm(log_ranks ~ log_freq)
beta <- coef(model_rank)[2]
# Forward cumulative and retrieve beta_prime
log_freq_unique <- log(unique(freq))
forward_cumulative <- function(freq_x){
result <- c()
freq_unique <- unique(freq_x)
for (i in 1:length(freq_unique)){
result <- c(result, sum(freq_x >= freq_unique[i]))
}
return(result)
}
log_fwd_cum <- log(forward_cumulative(freq))
model_fc <- mblm(log_fwd_cum ~ log_freq_unique)
beta_prime <- coef(model_fc)[2]
# Append results to lists
alpha_list <- c(alpha_list, alpha)
beta_list <- c(beta_list, beta)
beta_prime_list <- c(beta_prime_list, beta_prime)
}
for (df in list_datasets){
data <- read.csv(df)
freq_l <- data$Frequency
freq <- c(freq_l) #frequencies
ranks <- seq_along(freq) #ranks
log_ranks <- log(ranks)
log_freq <- log(freq)
#Frequencies-rank law
model_freq <- lm(log_freq ~ log_ranks)
alpha <- coef(model_freq)[2]
#Number-frequencies law
model_rank <- mblm(log_ranks ~ log_freq)
beta <- coef(model_rank)[2]
# Forward cumulative and retrieve beta_prime
log_freq_unique <- log(unique(freq))
forward_cumulative <- function(freq_x){
result <- c()
freq_unique <- unique(freq_x)
for (i in 1:length(freq_unique)){
result <- c(result, sum(freq_x >= freq_unique[i]))
}
return(result)
}
log_fwd_cum <- log(forward_cumulative(freq))
model_fc <- mblm(log_fwd_cum ~ log_freq_unique)
beta_prime <- coef(model_fc)[2]
# Append results to lists
alpha_list <- c(alpha_list, alpha)
beta_list <- c(beta_list, beta)
beta_prime_list <- c(beta_prime_list, beta_prime)
}
alpha
alpha_list
beta_list
beta_prime
beta_prime_list
len(beta_prime_list)
lenght(beta_prime_list)
#df with information about languagues
lang_info <- read_csv('language_data_2.csv')
View(lang_info)
lang_info$alpha <- alpha_list
lang_info$beta <- beta_list
lang_info$beta_prime <- beta_prime_list
View(lang_info)
# Save the dataset with new values
write.csv(data, "data_languages.csv", row.names = FALSE)
#df with information about languagues
lang_info <- read_csv('language_data_2.csv')
languages <- lang_info$Language
#Append columns with new values: alpha, beta, beta prime
lang_info$alpha <- alpha_list
lang_info$beta <- beta_list
lang_info$beta_prime <- beta_prime_list
# Save the dataset with new values
write.csv(lang_info, "data_languages.csv", row.names = FALSE)
#Prueba
data <- list_datasets[1]
#Getting frequencies and ranks
freq_l<- data$Frequency
freq_l<- data$Frequency
list_datasets <- list.files(path = "data", pattern = ".csv", full.names = TRUE)
#Prueba
data <- list_datasets[1]
#Getting frequencies and ranks
freq_l<- data$Frequency
#Prueba
data <- read_csv(list_datasets[1])
#Getting frequencies and ranks
freq_l<- data$Frequency
freq <- c(freq_l)
ranks <- seq_along(freq)
log_ranks <- log(ranks)
log_freq <- log(freq)
#Frequencies-rank law
model_freq <- lm(log_freq ~ log_ranks)
alpha <- coef(model_freq)
ggplot(data = model_freq, aes(x = log_ranks, y = log_freq)) +
geom_point(color = "red") +
geom_smooth(method = "lm", se = FALSE, col = "purple") +
labs(title = "Regression on Frequencies-rank law",
x = "Ranks",
y = "Frequencies")
#Multipanel figure for Frequency-Rank law
#1
data -> read_csv(list_datasets[1])
#Multipanel figure for Frequency-Rank law
#1
data <- read_csv(list_datasets[1])
freq_l<- data$Frequency
freq <- c(freq_l)
ranks <- seq_along(freq)
log_ranks <- log(ranks)
log_freq <- log(freq)
model_freq <- lm(log_freq ~ log_ranks)
p1<- ggplot(data = model_freq, aes(x = log_ranks, y = log_freq)) +
geom_point(color = "red") +
geom_smooth(method = "lm", se = FALSE, col = "purple") +
labs(title = "Arabic regression on Frequencies-rank law",
x = "Ranks",
y = "Frequencies")
#2
data <- read_csv(list_datasets[4])
freq_l<- data$Frequency
freq <- c(freq_l)
ranks <- seq_along(freq)
log_ranks <- log(ranks)
log_freq <- log(freq)
model_freq <- lm(log_freq ~ log_ranks)
p2<- ggplot(data = model_freq, aes(x = log_ranks, y = log_freq)) +
geom_point(color = "red") +
geom_smooth(method = "lm", se = FALSE, col = "purple") +
labs(title = "Chinese regression on Frequencies-rank law",
x = "Ranks",
y = "Frequencies")
#3
data <- read_csv(list_datasets[10])
freq_l<- data$Frequency
freq <- c(freq_l)
ranks <- seq_along(freq)
log_ranks <- log(ranks)
log_freq <- log(freq)
model_freq <- lm(log_freq ~ log_ranks)
p3<- ggplot(data = model_freq, aes(x = log_ranks, y = log_freq)) +
geom_point(color = "red") +
geom_smooth(method = "lm", se = FALSE, col = "purple") +
labs(title = "Japanese regression on Frequencies-rank law",
x = "Ranks",
y = "Frequencies")
#4
data <- read_csv(list_datasets[12])
freq_l<- data$Frequency
freq <- c(freq_l)
ranks <- seq_along(freq)
log_ranks <- log(ranks)
log_freq <- log(freq)
model_freq <- lm(log_freq ~ log_ranks)
p4<- ggplot(data = model_freq, aes(x = log_ranks, y = log_freq)) +
geom_point(color = "red") +
geom_smooth(method = "lm", se = FALSE, col = "purple") +
labs(title = "Korean regression on Frequencies-rank law",
x = "Ranks",
y = "Frequencies")
#5
data <- read_csv(list_datasets[11])
freq_l<- data$Frequency
freq <- c(freq_l)
ranks <- seq_along(freq)
log_ranks <- log(ranks)
log_freq <- log(freq)
model_freq <- lm(log_freq ~ log_ranks)
p5<- ggplot(data = model_freq, aes(x = log_ranks, y = log_freq)) +
geom_point(color = "red") +
geom_smooth(method = "lm", se = FALSE, col = "purple") +
labs(title = "Kannada regression on Frequencies-rank law",
x = "Ranks",
y = "Frequencies")
#6
data <- read_csv(list_datasets[17])
freq_l<- data$Frequency
freq <- c(freq_l)
ranks <- seq_along(freq)
log_ranks <- log(ranks)
log_freq <- log(freq)
model_freq <- lm(log_freq ~ log_ranks)
p6<- ggplot(data = model_freq, aes(x = log_ranks, y = log_freq)) +
geom_point(color = "red") +
geom_smooth(method = "lm", se = FALSE, col = "purple") +
labs(title = "Spanish regression on Frequencies-rank law",
x = "Ranks",
y = "Frequencies")
p6
#Arranging plots
multiplot <- grid.arrange(p1, p2, p3, p4, p5, p6, nrow = 3)
library(gridExtra)
#Arranging plots
multiplot <- grid.arrange(p1, p2, p3, p4, p5, p6, nrow = 3)
multiplot <- grid.arrange(p1, p2, p3, p4, p5, p6, nrow = 2)
