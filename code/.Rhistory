#List with files
list_datasets <- list.files(path = "data", pattern = ".csv", full.names = TRUE)
list_datasets <- list.files(path = "data", pattern = ".csv", full.names = TRUE)
list_datasets <- list.files(path = "data_1", pattern = ".csv", full.names = TRUE)
library(corrr)
library(ggplot2)
library(ggrepel)
library(tidyverse)
library(mblm)
library(MASS)
#List with files
list_datasets <- list.files(path = "data_1", pattern = ".csv", full.names = TRUE)
#Sets lists with items
alpha_list <- c()
beta_list <- c()
beta_prime_list <- c()
#Loop to perform calculations for each dataset
for (df in list_datasets){
data <- read.csv(df)
freq <- data$Frequency
ranks <- seq_along(freq) #ranks
log_ranks <- log(ranks)
log_freq <- log(freq)
#Frequencies-rank law
model_freq <- rlm(log_freq ~ log_ranks)
summary(model_freq)
beta <- coef(model_freq)[2]
#Number-frequencies law
model_rank <- rlm(log_ranks ~ log_freq)
summary(model_rank)
beta_prime <- coef(model_rank)[2]
# Forward cumulative and retrieve beta_prime
log_freq_unique <- log(unique(freq))
forward_cumulative <- function(freq_x){
result <- c()
freq_unique <- unique(freq_x)
for (i in 1:length(freq_unique)){
result <- c(result, sum(freq_x >= freq_unique[i]))
}
return(result)
}
log_fwd_cum <- log(forward_cumulative(freq))
model_fc <- rlm(log_freq_unique ~ log_fwd_cum)
summary(model_fc)
alpha <- coef(model_fc)[2]
# Append results to lists
alpha_list <- c(alpha_list, alpha)
beta_list <- c(beta_list, beta)
beta_prime_list <- c(beta_prime_list, beta_prime)
}
#df with information about languagues
lang_info <- read_csv('language_data_2.csv', show_col_types = FALSE)
library(corrr)
library(ggplot2)
library(ggrepel)
library(tidyverse)
library(mblm)
library(MASS)
#List with files
list_datasets <- list.files(path = "data_1", pattern = ".csv", full.names = TRUE)
#Sets lists with items
alpha_list <- c()
beta_list <- c()
beta_prime_list <- c()
#Loop to perform calculations for each dataset
for (df in list_datasets){
data <- read.csv(df)
freq <- data$Frequency
ranks <- seq_along(freq) #ranks
log_ranks <- log(ranks)
log_freq <- log(freq)
#Frequencies-rank law
model_freq <- rlm(log_freq ~ log_ranks)
summary(model_freq)
beta <- coef(model_freq)[2]
#Number-frequencies law
model_rank <- rlm(log_ranks ~ log_freq)
summary(model_rank)
beta_prime <- coef(model_rank)[2]
# Forward cumulative and retrieve beta_prime
log_freq_unique <- log(unique(freq))
forward_cumulative <- function(freq_x){
result <- c()
freq_unique <- unique(freq_x)
for (i in 1:length(freq_unique)){
result <- c(result, sum(freq_x >= freq_unique[i]))
}
return(result)
}
log_fwd_cum <- log(forward_cumulative(freq))
model_fc <- rlm(log_freq_unique ~ log_fwd_cum)
summary(model_fc)
alpha <- coef(model_fc)[2]
# Append results to lists
alpha_list <- c(alpha_list, alpha)
beta_list <- c(beta_list, beta)
beta_prime_list <- c(beta_prime_list, beta_prime)
}
#df with information about languagues
lang_info <- read_csv('D:\CCiL\Quantitative Linguistics\lab_22\language_data_2.csv', show_col_types = FALSE)
lang_info <- read_csv('D:\CCiL\Quantitative Linguistics\lab_22\language_data_2.csv', show_col_types = FALSE)
lang_info <- read_csv('D:\CCiL\Quantitative Linguistics\lab_22\language_data_2.csv', show_col_types = FALSE)
lang_info <- read_csv('D:/CCiL/Quantitative Linguistics/lab_22/language_data_2.csv', show_col_types = FALSE)
languages <- lang_info$Language
library(corrr)
library(ggplot2)
library(ggrepel)
library(tidyverse)
library(mblm)
library(MASS)
#List with files
list_datasets <- list.files(path = "data_1", pattern = ".csv", full.names = TRUE)
#Sets lists with items
alpha_list <- c()
beta_list <- c()
beta_prime_list <- c()
#Loop to perform calculations for each dataset
for (df in list_datasets){
data <- read.csv(df)
freq <- data$Frequency
ranks <- seq_along(freq) #ranks
log_ranks <- log(ranks)
log_freq <- log(freq)
#Frequencies-rank law
model_freq <- rlm(log_freq ~ log_ranks)
summary(model_freq)
beta <- coef(model_freq)[2]
#Number-frequencies law
model_rank <- rlm(log_ranks ~ log_freq)
summary(model_rank)
beta_prime <- coef(model_rank)[2]
# Forward cumulative and retrieve beta_prime
log_freq_unique <- log(unique(freq))
forward_cumulative <- function(freq_x){
result <- c()
freq_unique <- unique(freq_x)
for (i in 1:length(freq_unique)){
result <- c(result, sum(freq_x >= freq_unique[i]))
}
return(result)
}
log_fwd_cum <- log(forward_cumulative(freq))
model_fc <- rlm(log_freq_unique ~ log_fwd_cum)
summary(model_fc)
alpha <- coef(model_fc)[2]
# Append results to lists
alpha_list <- c(alpha_list, alpha)
beta_list <- c(beta_list, beta)
beta_prime_list <- c(beta_prime_list, beta_prime)
}
#df with information about languagues
lang_info <- read_csv('D:/CCiL/Quantitative Linguistics/lab_22/language_data_2.csv', show_col_types = FALSE)
languages <- lang_info$Language
#Append columns with new values: alpha, beta, beta prime
lang_info$alpha <- alpha_list
lang_info$beta <- beta_list
lang_info$beta_prime <- beta_prime_list
# Save the dataset with new values
write.csv(lang_info, "data_languages.csv", row.names = FALSE)
#Multipanel figures
build_plot <- function(lang_id, lang_name) {
data <- read_csv(list_datasets[lang_id], show_col_types = FALSE)
freq<- data$Frequency
ranks <- seq_along(freq)
log_ranks <- log(ranks)
log_freq <- log(freq)
model_freq <- rlm(log_freq ~ log_ranks) #Frequency-Rank law
print(summary(model_freq))
label <- paste(lang_name, "regression on frequencies-rank law")
new_plot <- ggplot(data = model_freq, aes(x = log_ranks, y = log_freq)) +
geom_point(color = "red") +
geom_smooth(method = "rlm", se = FALSE, col = "purple") +
labs(title = label,
x = "Ranks",
y = "Frequencies")
return(new_plot)
}
mult_binning <- function(lang_id, lang_name){
data <- read_csv(list_datasets[lang_id], show_col_types = FALSE)
freq<- data$Frequency
# freq <- freq[freq > 0]
ranks <- seq_along(freq)
label <- paste("Smoothed Curve", lang_name, "using Multiplicative Binning")
min_value <- min(freq)
max_value <- max(freq)
num_bins <- 10
factor <- exp(log(max_value/min_value) / num_bins)
bin_edges <- min_value * factor^(0:num_bins)
bin <- cut(freq, breaks = bin_edges, labels = FALSE)
smoothed_data <- aggregate(bin ~ freq, FUN = mean)
new_plot <- ggplot(smoothed_data, aes(x = freq, y = bin)) +
geom_line() +
scale_x_log10() +
labs(x = "Frequency", y = "Bins", title = label)
return(new_plot)
}
arabic <- build_plot(1, "Arabic")
chinese <- build_plot(4, "Chinese")
japanese <- build_plot(10, "Japanese")
korean <- build_plot(12, "Korean")
kannada <- build_plot(11, "Kannada")
spanish <- build_plot(17, "Spanish")
multiplot <- grid.arrange(arabic, chinese, japanese, korean, kannada, spanish, nrow = 2)
